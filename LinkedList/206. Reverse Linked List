/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var reverseList = function(head) {      //iterative
    if(!head || head.next === null){
        return head;
    }
    let prev = head;
    let curr = head.next;
    prev.next = null;
    while(curr){
        let temp = curr;
        curr = curr.next;
        temp.next = prev;
        prev = temp;
    }
    return prev;
};

/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var reverseList = function(head) {      //Recursive
    if(!head || head.next === null){
        return head;
    }
    let a =new ListNode();
    a =reverseList(head.next);
    head.next.next = head;
    head.next = null;
    return a;
}
